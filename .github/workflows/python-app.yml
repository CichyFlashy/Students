name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Pylint
        run: |
          pylint .

      - name: Test with pytest
        run: pytest

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report
          coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml

  lint:
    name: Lint Codebase
    runs-on: linux-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run Linter with Pylint
        run: pylint your_module/

  format:
    name: Format Code with Black
    runs-on: linux-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Black
        run: pip install black

      - name: Format code
        run: black . --check

  todo-issues:
    name: Create Issues from TODO Comments
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Issues for TODOs
        uses: alstr/todo-to-issue-action@v4
        with:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LABEL: "todo"